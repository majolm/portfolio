{"version":3,"sources":["scenes/illustrator.svg","scenes/isometric.svg","scenes/vsgang.svg","scenes/MainPage.js","scenes/Temps.js","App.js","index.js"],"names":["Meta","Card","MainPage","hoverable","style","width","cover","src","isometric","alt","actions","SettingOutlined","ShareAltOutlined","EllipsisOutlined","avatar","illustrator","height","title","description","vsgang","Title","Typography","Temps","useState","checked","setChecked","textPicker","displayTextPicker","shadowPicker","displayShadowPicker","sliderValue","setSliderValue","textSize","setTextSize","textColor","setTextColor","shadowColor","setShadowColor","styles","color","borderRadius","swatch","padding","background","boxShadow","display","cursor","popover","position","zIndex","top","right","bottom","left","shadow","i","min","max","defaultValue","onChange","value","onClick","hex","defaultChecked","textShadow","fontSize","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e89e044.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustrator.384fa2dd.svg\";","export default __webpack_public_path__ + \"static/media/isometric.7d080b03.svg\";","export default __webpack_public_path__ + \"static/media/vsgang.a98d69a4.svg\";","import { Card } from \"antd\";\nimport { ShareAltOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\nimport illustrator from './illustrator.svg';\nimport isometric from './isometric.svg';\nimport vsgang from './vsgang.svg';\n\nconst { Meta } = Card;\n\nconst MainPage = () => {\n    return (\n        <>\n            <Card\n                hoverable\n                style={{ width: 300 }}\n                cover={\n                    <img src={isometric} alt=\"isometric\" />\n                }\n                actions={[\n                    <SettingOutlined key=\"setting\" />,\n                    <ShareAltOutlined key=\"edit\" />,\n                    <EllipsisOutlined key=\"ellipsis\" />,\n                ]}\n            >\n                <Meta\n                avatar={\n                    <img\n                        src={illustrator}\n                        alt='Isometric Art'\n                        style={{ width: 30, height: 30 }}\n                    />}\n                title=\"Isometric projects\"\n                description=\"This is the description of the illustrator projects...\"\n                />\n            </Card>\n            <Card\n                hoverable\n                style={{ width: 300 }}\n                cover={\n                    <img src={vsgang} alt=\"VS Gang\" />\n                }\n                actions={[\n                    <SettingOutlined key=\"setting\" />,\n                    <ShareAltOutlined key=\"edit\" />,\n                    <EllipsisOutlined key=\"ellipsis\" />,\n                ]}\n            >\n                <Meta\n                avatar={\n                    <img\n                        src={illustrator}\n                        alt='VS Gang Art'\n                        style={{ width: 30, height: 30 }}\n                    />}\n                title=\"VS Gang projects\"\n                description=\"This is the description of the illustrator projects...\"\n                />\n            </Card>\n        </>\n    )\n}\n\nMainPage.propTypes = {};\n\nexport default MainPage;","import { useState } from 'react';\nimport { Switch, Slider, Typography } from \"antd\";\nimport { SketchPicker } from 'react-color';\n\nconst { Title } = Typography;\n\nfunction Temps() {\n\n    const [ checked, setChecked ] = useState(true);\n    const [textPicker, displayTextPicker] = useState(false);\n    const [shadowPicker, displayShadowPicker] = useState(false);\n    const [ sliderValue, setSliderValue ] = useState(100);\n    const [ textSize, setTextSize ] = useState(100);\n    const [ textColor, setTextColor ] = useState('#d77023');\n    const [ shadowColor, setShadowColor ] = useState('#0060FE');\n\n    const styles = {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n    };\n\n    if (checked) {\n        var shadow = '';\n        for (var i = 0; i < sliderValue; i++) {\n            shadow += `${shadow ? ', ' : ''}${i}px ${i}px 0 ${shadowColor}`;\n        }\n    } else { shadow = 'none' }\n\n    return (\n        <div style={{ width: '50%' }}>\n            <Slider\n                min={0}\n                max={400}\n                defaultValue={sliderValue}\n                onChange={(value) => setTextSize(value)}\n                style={{ width: '50%' }}\n            />\n            <div style={ styles.swatch } onClick={() => displayTextPicker(!textPicker) }>\n                <div style={{ ...styles.color, background: textColor } } />\n            </div>\n            { textPicker\n                ?   <div style={ styles.popover }>\n                        <div style={ styles.cover } onClick={() => displayTextPicker(false)  }/>\n                        <SketchPicker color={ textColor } onChange={ (color) => setTextColor(color.hex) } />\n                    </div>\n                :   null\n            }\n            <Switch defaultChecked onChange={() => setChecked(!checked)} />\n            <div style={ styles.swatch } onClick={() => displayShadowPicker(!shadowPicker) }>\n                <div style={{ ...styles.color, background: shadowColor } } />\n            </div>\n            { shadowPicker\n                ?   <div style={ styles.popover }>\n                        <div style={ styles.cover } onClick={() => displayShadowPicker(false)  }/>\n                        <SketchPicker color={ shadowColor } onChange={ (color) => setShadowColor(color.hex) } />\n                    </div>\n                :   null\n            }\n            <Slider\n                min={0}\n                max={400}\n                defaultValue={sliderValue}\n                onChange={(value) => setSliderValue(value)}\n                style={{ width: '50%' }}\n            />\n\n            <Title style={{ textShadow: shadow, color: textColor, fontSize: textSize }}>\n                Jolicoeur\n            </Title>\n        </div>\n    );\n}\n\nexport default Temps;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport MainPage from './scenes/MainPage';\nimport Temps from './scenes/Temps';\n// import { NavBar, Footer } from '@components';\n\nimport './App.css';\n\nconst App = () => {\n    return (\n            /* <NavBar /> */\n            <Switch>\n                <Route exact path=\"/\" component={MainPage} />\n                <Route exact path=\"/signIn\" component={Temps} />\n            </Switch>\n            /* <Footer /> */\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    ,document.getElementById('root')\n);\n"],"sourceRoot":""}