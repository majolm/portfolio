{"version":3,"sources":["App.js","index.js"],"names":["Title","Typography","App","useState","checked","setChecked","textPicker","displayTextPicker","shadowPicker","displayShadowPicker","sliderValue","setSliderValue","textSize","setTextSize","textColor","setTextColor","shadowColor","setShadowColor","styles","color","width","height","borderRadius","swatch","padding","background","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","shadow","i","className","min","max","defaultValue","onChange","value","style","onClick","hex","defaultChecked","textShadow","fontSize","ReactDOM","render","document","getElementById"],"mappings":"gQAKQA,G,OAAUC,IAAVD,OA2FOE,MAzFf,WAAgB,IAAD,EAEqBC,oBAAS,GAF9B,mBAEHC,EAFG,KAEMC,EAFN,OAG6BF,oBAAS,GAHtC,mBAGJG,EAHI,KAGQC,EAHR,OAIiCJ,oBAAS,GAJ1C,mBAIJK,EAJI,KAIUC,EAJV,OAK6BN,mBAAS,KALtC,mBAKHO,EALG,KAKUC,EALV,OAMuBR,mBAAS,KANhC,mBAMHS,EANG,KAMOC,EANP,OAOyBV,mBAAS,WAPlC,mBAOHW,EAPG,KAOQC,EAPR,OAQ6BZ,mBAAS,WARtC,mBAQHa,EARG,KAQUC,EARV,KAULC,EAAS,CACXC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,aAAc,OAEhBC,OAAQ,CACNC,QAAS,MACTC,WAAY,OACZH,aAAc,MACdI,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,QAIZ,GAAIhC,EAEA,IADA,IAAIiC,EAAS,GACJC,EAAI,EAAGA,EAAI5B,EAAa4B,IAC7BD,GAAM,UAAOA,EAAS,KAAO,IAAvB,OAA4BC,EAA5B,cAAmCA,EAAnC,gBAA4CtB,QAEjDqB,EAAS,OAElB,OACI,sBAAKE,UAAU,OAAf,UACA,cAAC,IAAD,CACIC,IAAK,EACLC,IAAK,IACLC,aAAchC,EACdiC,SAAU,SAACC,GAAD,OAAW/B,EAAY+B,IACjCC,MAAO,CAAEzB,MAAO,SAEpB,qBAAKyB,MAAQ3B,EAAOK,OAASuB,QAAS,kBAAMvC,GAAmBD,IAA/D,SACI,qBAAKuC,MAAK,2BAAO3B,EAAOC,OAAd,IAAqBM,WAAYX,QAE7CR,EACM,sBAAKuC,MAAQ3B,EAAOW,QAApB,UACI,qBAAKgB,MAAQ3B,EAAOc,MAAQc,QAAS,kBAAMvC,GAAkB,MAC7D,cAAC,IAAD,CAAcY,MAAQL,EAAY6B,SAAW,SAACxB,GAAD,OAAWJ,EAAaI,EAAM4B,WAE/E,KAER,cAAC,IAAD,CAAQC,gBAAc,EAACL,SAAU,kBAAMtC,GAAYD,MACnD,qBAAKyC,MAAQ3B,EAAOK,OAASuB,QAAS,kBAAMrC,GAAqBD,IAAjE,SACI,qBAAKqC,MAAK,2BAAO3B,EAAOC,OAAd,IAAqBM,WAAYT,QAE7CR,EACM,sBAAKqC,MAAQ3B,EAAOW,QAApB,UACI,qBAAKgB,MAAQ3B,EAAOc,MAAQc,QAAS,kBAAMrC,GAAoB,MAC/D,cAAC,IAAD,CAAcU,MAAQH,EAAc2B,SAAW,SAACxB,GAAD,OAAWF,EAAeE,EAAM4B,WAEnF,KAER,cAAC,IAAD,CACIP,IAAK,EACLC,IAAK,IACLC,aAAchC,EACdiC,SAAU,SAACC,GAAD,OAAWjC,EAAeiC,IACpCC,MAAO,CAAEzB,MAAO,SAGpB,cAACpB,EAAD,CAAO6C,MAAO,CAAEI,WAAYZ,EAAQlB,MAAOL,EAAWoC,SAAUtC,GAAhE,oBCpFRuC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.781fe067.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Switch, Slider, Typography } from \"antd\";\nimport { SketchPicker } from 'react-color';\nimport './App.css';\n\nconst { Title } = Typography;\n\nfunction App() {\n\n    const [ checked, setChecked ] = useState(true);\n    const [textPicker, displayTextPicker] = useState(false);\n    const [shadowPicker, displayShadowPicker] = useState(false);\n    const [ sliderValue, setSliderValue ] = useState(100);\n    const [ textSize, setTextSize ] = useState(100);\n    const [ textColor, setTextColor ] = useState('#d77023');\n    const [ shadowColor, setShadowColor ] = useState('#0060FE');\n\n    const styles = {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n    };\n\n    if (checked) {\n        var shadow = '';\n        for (var i = 0; i < sliderValue; i++) {\n            shadow += `${shadow ? ', ' : ''}${i}px ${i}px 0 ${shadowColor}`;\n        }\n    } else { shadow = 'none' }\n\n    return (\n        <div className='root'>\n        <Slider\n            min={0}\n            max={400}\n            defaultValue={sliderValue}\n            onChange={(value) => setTextSize(value)}\n            style={{ width: '50%' }}\n        />\n        <div style={ styles.swatch } onClick={() => displayTextPicker(!textPicker) }>\n            <div style={{ ...styles.color, background: textColor } } />\n        </div>\n        { textPicker\n            ?   <div style={ styles.popover }>\n                    <div style={ styles.cover } onClick={() => displayTextPicker(false)  }/>\n                    <SketchPicker color={ textColor } onChange={ (color) => setTextColor(color.hex) } />\n                </div>\n            :   null\n        }\n        <Switch defaultChecked onChange={() => setChecked(!checked)} />\n        <div style={ styles.swatch } onClick={() => displayShadowPicker(!shadowPicker) }>\n            <div style={{ ...styles.color, background: shadowColor } } />\n        </div>\n        { shadowPicker\n            ?   <div style={ styles.popover }>\n                    <div style={ styles.cover } onClick={() => displayShadowPicker(false)  }/>\n                    <SketchPicker color={ shadowColor } onChange={ (color) => setShadowColor(color.hex) } />\n                </div>\n            :   null\n        }\n        <Slider\n            min={0}\n            max={400}\n            defaultValue={sliderValue}\n            onChange={(value) => setSliderValue(value)}\n            style={{ width: '50%' }}\n        />\n\n        <Title style={{ textShadow: shadow, color: textColor, fontSize: textSize }}>\n            VS\n        </Title>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}